"use strict";(self.webpackChunkkrebit_apidocs=self.webpackChunkkrebit_apidocs||[]).push([[3615],{62894:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"getting-started/quickstart-signing","title":"Quickstart: Send your first signing","description":"Provision credentials, call core endpoints, and deliver a signing package end-to-end.","source":"@site/docs/getting-started/quickstart-signing.md","sourceDirName":"getting-started","slug":"/getting-started/quickstart-signing","permalink":"/docs/getting-started/quickstart-signing","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Quickstart: Send your first signing","description":"Provision credentials, call core endpoints, and deliver a signing package end-to-end.","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/docs/"},"next":{"title":"Authenticate with Krebit Sign","permalink":"/docs/getting-started/authentication"}}');var t=i(74848),a=i(28453);const r={title:"Quickstart: Send your first signing",description:"Provision credentials, call core endpoints, and deliver a signing package end-to-end.",sidebar_position:1},d="Quickstart: Send your first signing",o={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1 \u2013 Obtain an access token",id:"step-1--obtain-an-access-token",level:2},{value:"Step 2 \u2013 Create a draft signing",id:"step-2--create-a-draft-signing",level:2},{value:"Step 3 \u2013 Upload a PDF document",id:"step-3--upload-a-pdf-document",level:2},{value:"Step 4 \u2013 Add a recipient",id:"step-4--add-a-recipient",level:2},{value:"Step 5 \u2013 Send the signing package",id:"step-5--send-the-signing-package",level:2},{value:"Step 6 \u2013 Track progress",id:"step-6--track-progress",level:2},{value:"Optional \u2013 Download the sealed PDF",id:"optional--download-the-sealed-pdf",level:2},{value:"Example Node.js integration",id:"example-nodejs-integration",level:2},{value:"Where to go next",id:"where-to-go-next",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"quickstart-send-your-first-signing",children:"Quickstart: Send your first signing"})}),"\n",(0,t.jsx)(n.p,{children:"This walkthrough builds a minimal integration that creates a signing, uploads a PDF, adds a recipient, and dispatches the package. It uses the Client Credentials flow and cURL for clarity, but you can translate the same steps into any HTTP client."}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"An active Krebit Sign tenant."}),"\n",(0,t.jsxs)(n.li,{children:["An OAuth application with client credentials (",(0,t.jsx)(n.code,{children:"client_id"}),", ",(0,t.jsx)(n.code,{children:"client_secret"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["A PDF file (",(0,t.jsx)(n.code,{children:"document.pdf"}),") under 10\u202fMB without passwords or existing signatures."]}),"\n",(0,t.jsx)(n.li,{children:"A recipient ready to receive signing notifications."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Set helpful environment variables before proceeding:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export KREBIT_DOMAIN="yourco.krebit.se"\nexport KREBIT_API="https://${KREBIT_DOMAIN}/api/1.0"\nexport KREBIT_CLIENT_ID="YOUR_CLIENT_ID"\nexport KREBIT_CLIENT_SECRET="YOUR_CLIENT_SECRET"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"step-1--obtain-an-access-token",children:"Step 1 \u2013 Obtain an access token"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'ACCESS_TOKEN=$(curl --silent --request POST \\\n  --url https://${KREBIT_DOMAIN}/oauth/token \\\n  --header \'Content-Type: application/json\' \\\n  --data "{\n    \\"grant_type\\": \\"client_credentials\\",\n    \\"client_id\\": \\"${KREBIT_CLIENT_ID}\\",\n    \\"client_secret\\": \\"${KREBIT_CLIENT_SECRET}\\"\n  }" | jq -r \'.access_token\')\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If you do not have ",(0,t.jsx)(n.code,{children:"jq"}),", run the request manually and copy the ",(0,t.jsx)(n.code,{children:"access_token"}),". Tokens typically expire after one hour; refresh as needed."]}),"\n",(0,t.jsx)(n.h2,{id:"step-2--create-a-draft-signing",children:"Step 2 \u2013 Create a draft signing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'SIGNING_ID=$(curl --silent --request POST \\\n  --url ${KREBIT_API}/signings \\\n  --header "Authorization: Bearer ${ACCESS_TOKEN}" \\\n  --header \'Content-Type: application/json\' \\\n  --data \'{\n    "name": "Demo agreement",\n    "language": "EN",\n    "signing_order": "sequential",\n    "message": "Please sign by Friday."\n  }\' | jq -r \'.id\')\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Drafts are fully editable. If you receive a ",(0,t.jsx)(n.code,{children:"400"})," response, review the error payload for validation messages (for example, unsupported language or message length over 400 characters)."]}),"\n",(0,t.jsx)(n.h2,{id:"step-3--upload-a-pdf-document",children:"Step 3 \u2013 Upload a PDF document"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"DOCUMENT_ID=$(curl --silent --request POST \\\n  --url ${KREBIT_API}/signings/${SIGNING_ID}/documents \\\n  --header \"Authorization: Bearer ${ACCESS_TOKEN}\" \\\n  --form selected_file=@document.pdf | jq -r '.id')\n"})}),"\n",(0,t.jsxs)(n.p,{children:["PDF validation happens server-side. A ",(0,t.jsx)(n.code,{children:"422"})," status typically indicates the file is protected, too large, or already signed."]}),"\n",(0,t.jsx)(n.h2,{id:"step-4--add-a-recipient",children:"Step 4 \u2013 Add a recipient"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'RECIPIENT_ID=$(curl --silent --request POST \\\n  --url ${KREBIT_API}/signings/${SIGNING_ID}/recipients \\\n  --header "Authorization: Bearer ${ACCESS_TOKEN}" \\\n  --header \'Content-Type: application/json\' \\\n  --data \'{\n    "first_name": "Ada",\n    "last_name": "Lovelace",\n    "email": "ada@example.com",\n    "signing_method": "email",\n    "order": 1\n  }\' | jq -r \'.id\')\n'})}),"\n",(0,t.jsxs)(n.p,{children:["For sequential signings, ensure ",(0,t.jsx)(n.code,{children:"order"})," values are unique and start at 1. Some signing methods require ",(0,t.jsx)(n.code,{children:"phone"})," or identification fields\u2014refer to the generated API reference for specifics."]}),"\n",(0,t.jsx)(n.h2,{id:"step-5--send-the-signing-package",children:"Step 5 \u2013 Send the signing package"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl --request POST \\\n  --url ${KREBIT_API}/signings/${SIGNING_ID}/send \\\n  --header "Authorization: Bearer ${ACCESS_TOKEN}"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Sending transitions the signing out of draft mode and dispatches notifications. If the response returns ",(0,t.jsx)(n.code,{children:"400"})," with ",(0,t.jsx)(n.code,{children:"cannot_be_sent"}),", verify that at least one document and recipient exist and that the signing is still editable."]}),"\n",(0,t.jsx)(n.h2,{id:"step-6--track-progress",children:"Step 6 \u2013 Track progress"}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"GET /api/1.0/signings/{id}"})," to read the signing status, or list outstanding recipients via ",(0,t.jsx)(n.code,{children:"GET /api/1.0/signings/{id}/recipients"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl --request GET \\\n  --url ${KREBIT_API}/signings/${SIGNING_ID} \\\n  --header \"Authorization: Bearer ${ACCESS_TOKEN}\" | jq '{\n    name: .name,\n    is_draft: .is_draft,\n    is_completed: .is_completed,\n    cancelled_at: .cancelled_at,\n    documents: (.documents[] | {name, completed_at})\n  }'\n"})}),"\n",(0,t.jsx)(n.p,{children:"Use reminders when recipients stall:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl --request POST \\\n  --url ${KREBIT_API}/signings/${SIGNING_ID}/recipients/${RECIPIENT_ID}/remind \\\n  --header "Authorization: Bearer ${ACCESS_TOKEN}"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Reminders respect the 14-day invitation expiry and silently skip recipients who have already completed their signing step."}),"\n",(0,t.jsx)(n.h2,{id:"optional--download-the-sealed-pdf",children:"Optional \u2013 Download the sealed PDF"}),"\n",(0,t.jsx)(n.p,{children:"After all recipients finish, download the signed version:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl --request GET \\\n  --url ${KREBIT_API}/signings/${SIGNING_ID}/documents/${DOCUMENT_ID}/download-signed \\\n  --header "Authorization: Bearer ${ACCESS_TOKEN}" \\\n  --output signed-agreement.pdf\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"download-signed"})," returns ",(0,t.jsx)(n.code,{children:"404"})," until the document is fully signed. Poll sparingly or subscribe to webhooks for real-time updates."]}),"\n",(0,t.jsx)(n.h2,{id:"example-nodejs-integration",children:"Example Node.js integration"}),"\n",(0,t.jsxs)(n.p,{children:["The snippet below wraps the same workflow in Node.js using ",(0,t.jsx)(n.code,{children:"axios"})," and ",(0,t.jsx)(n.code,{children:"form-data"}),". It is intentionally concise\u2014add robust error handling and retries before using it in production."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import axios from 'axios';\nimport FormData from 'form-data';\nimport fs from 'node:fs';\n\nconst baseUrl = `https://${process.env.KREBIT_DOMAIN}`;\nconst api = axios.create({\n  baseURL: `${baseUrl}/api/1.0`,\n  headers: { 'Accept': 'application/json' },\n});\n\nasync function authenticate() {\n  const { data } = await axios.post(`${baseUrl}/oauth/token`, {\n    grant_type: 'client_credentials',\n    client_id: process.env.KREBIT_CLIENT_ID,\n    client_secret: process.env.KREBIT_CLIENT_SECRET,\n  });\n  api.defaults.headers.common.Authorization = `Bearer ${data.access_token}`;\n}\n\nasync function run() {\n  await authenticate();\n\n  const { data: signing } = await api.post('/signings', {\n    name: 'Demo agreement',\n    language: 'EN',\n    signing_order: 'sequential',\n    message: 'Please sign by Friday.',\n  });\n\n  const form = new FormData();\n  form.append('selected_file', fs.createReadStream('./document.pdf'));\n  await api.post(`/signings/${signing.id}/documents`, form, {\n    headers: form.getHeaders(),\n  });\n\n  await api.post(`/signings/${signing.id}/recipients`, {\n    first_name: 'Ada',\n    last_name: 'Lovelace',\n    email: 'ada@example.com',\n    signing_method: 'email',\n    order: 1,\n  });\n\n  await api.post(`/signings/${signing.id}/send`);\n  console.log('Signing dispatched:', signing.id);\n}\n\nrun().catch((error) => {\n  console.error('Krebit workflow failed', error.response?.data || error.message);\n  process.exit(1);\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"where-to-go-next",children:"Where to go next"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Review the ",(0,t.jsx)(n.a,{href:"/docs/signings/",children:"Signings guide"})," for lifecycle best practices."]}),"\n",(0,t.jsx)(n.li,{children:"Explore webhook setup to receive completion events in real time."}),"\n",(0,t.jsx)(n.li,{children:"Browse the generated API reference from the sidebar whenever you need parameter or schema details."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);